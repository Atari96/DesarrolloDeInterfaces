@inherits LayoutComponentBase

@using System.Threading.Tasks
@inject IJSRuntime JSRuntime

@*<summary>
    Es un archivo de diseño compartido que define la estructura principal de diseño para todas las páginas dentro del proyecto.
    En esencia, actúa como una plantilla maestra que define la disposición común de los elementos en todas las páginas del sitio
    Rodeamos la pestaña de Mis Pedidos con el Authorize para que solo sea visto por usuarios logueados y autenticados
    Introducimos un boton para activar el modo oscuro
</summary>*@


<div class="top-bar">
    <a class="logo" href="">
        <img src="img/pizzeriaDonPablo.svg" />
    </a>

    <NavLink href="" class="nav-tab" Match="NavLinkMatch.All">
        <img src="img/pizza-slice.svg" />
        <div>Elije tu Pizza</div>
    </NavLink>
    
    <!-- Rodeamos la pestaña de Mis Pedidos con el Authorize para que solo sea visto por usuarios logueados y autenticados-->
    <AuthorizeView>
        <NavLink href="myorders" class="nav-tab">
            <img src="img/bike.svg" />
            <div>Mis Pedidos</div>
        </NavLink>
    </AuthorizeView>

    <AuthorizeView>
        <NavLink href="promociones" class="nav-tab">
            <img src="img/promocion.svg" />
            <div>Mis Promociones</div>
        </NavLink>
    </AuthorizeView>

    <!-- Introducimos un boton para activar el modo oscuro-->
    <a class="sign-in" href="/" @onclick="CambiarModoOscuro">MOdo oscuro</a> 
    
    <!-- Para mostrar el logueo incorporamos el loginDisplay, viene de una libreria donde se define todo-->
    <LoginDisplay />
</div>

<div class="content">
    @Body
</div>


@code {
    private int tog = 0;
    string cssFile = "css/site.css";

    private async Task CambiarModoOscuro()
    {
        cssFile = (tog == 0) ? "css/site2" : "css/site.css";
        tog = (tog == 0) ? 1 : 0;
        await JSRuntime.InvokeVoidAsync("cambiarTema", cssFile);
    }
}

